/**
 * Do not edit this file.  Any changes will be overwritten by the gamedata
 * updater or by upgrading your AMX Mod X install.
 *
 * To override data in this file, create a subdirectory named "custom" and
 * place your own gamedata file(s) inside of it.  Such files will be parsed
 * after AMXX's own.
 *
 * For more information, see http://wiki.alliedmods.net/Gamedata_Updating_(AMX_Mod_X)
 */

"Games"
{
	"#default"
	{
		"Classes"
		{
			"CBaseEntity"
			{
				"Offsets"
				{
					"pev"  // entvars_t*
					{
						"windows"   "4"
						"linux"     "4"
						"mac"       "4"
					}

					"m_pGoalEnt"  // CBaseEntity*
					{
						"windows"   "8"
						"linux"     "8"
						"mac"       "8"
					}

					"m_pLink"  // CBaseEntity*
					{
						"windows"   "12"
						"linux"     "12"
						"mac"       "12"
					}

					"m_pfnThink"  // (*__pfn)(CBaseEntity*)
					{
						"windows"   "16"
						"linux"     "16"
						"mac"       "16"
					}

					"m_pfnTouch"  // (*__pfn)(CBaseEntity*, CBaseEntity*)
					{
						"windows"   "20"
						"linux"     "24"
						"mac"       "24"
					}

					"m_pfnUse"  // (*__pfn)(CBaseEntity*, CBaseEntity*, CBaseEntity*, USE_TYPE, float)
					{
						"windows"   "24"
						"linux"     "32"
						"mac"       "32"
					}

					"m_pfnBlocked"  // (*__pfn)(CBaseEntity*, CBaseEntity*)
					{
						"windows"   "28"
						"linux"     "40"
						"mac"       "40"
					}

					"nextpc"  // int
					{
						"windows"   "32"
						"linux"     "48"
						"mac"       "48"
					}

					"lastpc"  // int
					{
						"windows"   "36"
						"linux"     "52"
						"mac"       "52"
					}

					"last_impulse"  // int
					{
						"windows"   "40"
						"linux"     "56"
						"mac"       "56"
					}

					"armorclass"  // int
					{
						"windows"   "44"
						"linux"     "60"
						"mac"       "60"
					}

					"tf_items"  // int
					{
						"windows"   "48"
						"linux"     "64"
						"mac"       "64"
					}

					"tf_items_flags"  // int
					{
						"windows"   "52"
						"linux"     "68"
						"mac"       "68"
					}

					"no_grenades_1"  // int
					{
						"windows"   "56"
						"linux"     "72"
						"mac"       "72"
					}

					"no_grenades_2"  // int
					{
						"windows"   "60"
						"linux"     "76"
						"mac"       "76"
					}

					"tp_grenades_1"  // int
					{
						"windows"   "64"
						"linux"     "80"
						"mac"       "80"
					}

					"tp_grenades_2"  // int
					{
						"windows"   "68"
						"linux"     "84"
						"mac"       "84"
					}

					"m_iszGrenadeName"  // string_t
					{
						"windows"   "72"
						"linux"     "88"
						"mac"       "88"
					}

					"got_aliases"  // BOOL
					{
						"windows"   "76"
						"linux"     "92"
						"mac"       "92"
					}

					"cheat_check"  // BOOL
					{
						"windows"   "80"
						"linux"     "96"
						"mac"       "96"
					}

					"is_removed"  // BOOL
					{
						"windows"   "84"
						"linux"     "100"
						"mac"       "100"
					}

					"is_undercover"  // BOOL
					{
						"windows"   "88"
						"linux"     "104"
						"mac"       "104"
					}

					"is_building"  // BOOL
					{
						"windows"   "92"
						"linux"     "108"
						"mac"       "108"
					}

					"is_detpacking"  // BOOL
					{
						"windows"   "96"
						"linux"     "112"
						"mac"       "112"
					}

					"is_feigning"  // BOOL
					{
						"windows"   "100"
						"linux"     "116"
						"mac"       "116"
					}

					"is_unableto_spy_or_teleport"  // BOOL
					{
						"windows"   "104"
						"linux"     "120"
						"mac"       "120"
					}

					"has_disconnected"  // BOOL
					{
						"windows"   "108"
						"linux"     "124"
						"mac"       "124"
					}

					"fClientGrenadePrimed"  // BOOL
					{
						"windows"   "112"
						"linux"     "128"
						"mac"       "128"
					}

					"bRemoveGrenade"  // BOOL
					{
						"windows"   "116"
						"linux"     "132"
						"mac"       "132"
					}

					"m_usBuildingEvent"  // short unsigned int
					{
						"windows"   "120"
						"linux"     "136"
						"mac"       "136"
					}

					"m_iBuildingEventState"  // int
					{
						"windows"   "124"
						"linux"     "140"
						"mac"       "140"
					}

					"m_vOldOrigin"  // Vector
					{
						"windows"   "128"
						"linux"     "144"
						"mac"       "144"
					}

					"tfstate"  // int
					{
						"windows"   "140"
						"linux"     "156"
						"mac"       "156"
					}

					"items"  // int
					{
						"windows"   "144"
						"linux"     "160"
						"mac"       "160"
					}

					"weapon"  // int
					{
						"windows"   "148"
						"linux"     "164"
						"mac"       "164"
					}

					"m_iPrimedGrenType"  // int
					{
						"windows"   "152"
						"linux"     "168"
						"mac"       "168"
					}

					"observer_list"  // CBaseEntity*
					{
						"windows"   "156"
						"linux"     "172"
						"mac"       "172"
					}

					"m_pOtherSection"  // EHANDLE
					{
						"windows"   "160"
						"linux"     "176"
						"mac"       "176"
					}

					"m_iRightBound"  // int
					{
						"windows"   "168"
						"linux"     "184"
						"mac"       "184"
					}

					"m_iLeftBound"  // int
					{
						"windows"   "172"
						"linux"     "188"
						"mac"       "188"
					}

					"cl_no_grenades_1"  // float
					{
						"windows"   "176"
						"linux"     "192"
						"mac"       "192"
					}

					"cl_no_grenades_2"  // float
					{
						"windows"   "180"
						"linux"     "196"
						"mac"       "196"
					}

					"current_ammo"  // int*
					{
						"windows"   "184"
						"linux"     "200"
						"mac"       "200"
					}

					"currentammo"  // float
					{
						"windows"   "188"
						"linux"     "204"
						"mac"       "204"
					}

					"maxammo_medikit"  // int
					{
						"windows"   "192"
						"linux"     "208"
						"mac"       "208"
					}

					"ammo_medikit"  // int
					{
						"windows"   "196"
						"linux"     "212"
						"mac"       "212"
					}

					"maxammo_shells"  // int
					{
						"windows"   "200"
						"linux"     "216"
						"mac"       "216"
					}

					"ammo_detpack"  // int
					{
						"windows"   "204"
						"linux"     "220"
						"mac"       "220"
					}

					"maxammo_detpack"  // int
					{
						"windows"   "208"
						"linux"     "224"
						"mac"       "224"
					}

					"ammo_shells"  // int
					{
						"windows"   "212"
						"linux"     "228"
						"mac"       "228"
					}

					"maxammo_nails"  // int
					{
						"windows"   "216"
						"linux"     "232"
						"mac"       "232"
					}

					"ammo_nails"  // int
					{
						"windows"   "220"
						"linux"     "236"
						"mac"       "236"
					}

					"maxammo_cells"  // int
					{
						"windows"   "224"
						"linux"     "240"
						"mac"       "240"
					}

					"ammo_cells"  // int
					{
						"windows"   "228"
						"linux"     "244"
						"mac"       "244"
					}

					"maxammo_rockets"  // int
					{
						"windows"   "232"
						"linux"     "248"
						"mac"       "248"
					}

					"ammo_rockets"  // int
					{
						"windows"   "236"
						"linux"     "252"
						"mac"       "252"
					}

					"items_allowed"  // int
					{
						"windows"   "240"
						"linux"     "256"
						"mac"       "256"
					}

					"armor_allowed"  // float
					{
						"windows"   "244"
						"linux"     "260"
						"mac"       "260"
					}

					"maxarmor"  // float
					{
						"windows"   "248"
						"linux"     "264"
						"mac"       "264"
					}

					"exec_scripts"  // int
					{
						"windows"   "252"
						"linux"     "268"
						"mac"       "268"
					}

					"exec_map_scripts"  // int
					{
						"windows"   "256"
						"linux"     "272"
						"mac"       "272"
					}

					"display_class_briefing"  // int
					{
						"windows"   "260"
						"linux"     "276"
						"mac"       "276"
					}

					"take_screenshots"  // int
					{
						"windows"   "264"
						"linux"     "280"
						"mac"       "280"
					}

					"local_blood"  // int
					{
						"windows"   "268"
						"linux"     "284"
						"mac"       "284"
					}

					"weaponmode"  // float
					{
						"windows"   "272"
						"linux"     "288"
						"mac"       "288"
					}

					"motd"  // float
					{
						"windows"   "276"
						"linux"     "292"
						"mac"       "292"
					}

					"current_menu"  // float
					{
						"windows"   "280"
						"linux"     "296"
						"mac"       "296"
					}

					"menu_displaytime"  // float
					{
						"windows"   "284"
						"linux"     "300"
						"mac"       "300"
					}

					"menu_refreshtime"  // float
					{
						"windows"   "288"
						"linux"     "304"
						"mac"       "304"
					}

					"m_flSafetyCheckTime"  // float
					{
						"windows"   "292"
						"linux"     "308"
						"mac"       "308"
					}

					"team_no"  // int
					{
						"windows"   "296"
						"linux"     "312"
						"mac"       "312"
					}

					"lives"  // int
					{
						"windows"   "300"
						"linux"     "316"
						"mac"       "316"
					}

					"infection_team_no"  // int
					{
						"windows"   "304"
						"linux"     "320"
						"mac"       "320"
					}

					"real_frags"  // int
					{
						"windows"   "308"
						"linux"     "324"
						"mac"       "324"
					}

					"respawn_time"  // float
					{
						"windows"   "312"
						"linux"     "328"
						"mac"       "328"
					}

					"suicide_time"  // float
					{
						"windows"   "316"
						"linux"     "332"
						"mac"       "332"
					}

					"building"  // EHANDLE
					{
						"windows"   "320"
						"linux"     "336"
						"mac"       "336"
					}

					"building_wait"  // float
					{
						"windows"   "328"
						"linux"     "344"
						"mac"       "344"
					}

					"real_owner"  // EHANDLE
					{
						"windows"   "332"
						"linux"     "348"
						"mac"       "348"
					}

					"has_dispenser"  // float
					{
						"windows"   "340"
						"linux"     "356"
						"mac"       "356"
					}

					"has_sentry"  // float
					{
						"windows"   "344"
						"linux"     "360"
						"mac"       "360"
					}

					"has_entry_teleporter"  // float
					{
						"windows"   "348"
						"linux"     "364"
						"mac"       "364"
					}

					"has_exit_teleporter"  // float
					{
						"windows"   "352"
						"linux"     "368"
						"mac"       "368"
					}

					"weapons_carried"  // int
					{
						"windows"   "356"
						"linux"     "372"
						"mac"       "372"
					}

					"current_weapon"  // float
					{
						"windows"   "360"
						"linux"     "376"
						"mac"       "376"
					}

					"last_weapon"  // int
					{
						"windows"   "364"
						"linux"     "380"
						"mac"       "380"
					}

					"last_weaponmode"  // float
					{
						"windows"   "368"
						"linux"     "384"
						"mac"       "384"
					}

					"reload_shotgun"  // float
					{
						"windows"   "372"
						"linux"     "388"
						"mac"       "388"
					}

					"reload_super_shotgun"  // float
					{
						"windows"   "376"
						"linux"     "392"
						"mac"       "392"
					}

					"reload_nailgun"  // float
					{
						"windows"   "380"
						"linux"     "396"
						"mac"       "396"
					}

					"reload_super_nailgun"  // float
					{
						"windows"   "384"
						"linux"     "400"
						"mac"       "400"
					}

					"reload_grenade_launcher"  // float
					{
						"windows"   "388"
						"linux"     "404"
						"mac"       "404"
					}

					"reload_rocket_launcher"  // float
					{
						"windows"   "392"
						"linux"     "408"
						"mac"       "408"
					}

					"reload_flamethrower"  // float
					{
						"windows"   "396"
						"linux"     "412"
						"mac"       "412"
					}

					"reload_incendiary"  // float
					{
						"windows"   "400"
						"linux"     "416"
						"mac"       "416"
					}

					"heat"  // float
					{
						"windows"   "404"
						"linux"     "420"
						"mac"       "420"
					}

					"sniper_zoom"  // float
					{
						"windows"   "408"
						"linux"     "424"
						"mac"       "424"
					}

					"immune_to_check"  // float
					{
						"windows"   "412"
						"linux"     "428"
						"mac"       "428"
					}

					"last_saveme_sound"  // float
					{
						"windows"   "416"
						"linux"     "432"
						"mac"       "432"
					}

					"head_shot_vector"  // Vector
					{
						"windows"   "420"
						"linux"     "436"
						"mac"       "436"
					}

					"leg_damage"  // float
					{
						"windows"   "432"
						"linux"     "448"
						"mac"       "448"
					}

					"cheat_level"  // float
					{
						"windows"   "436"
						"linux"     "452"
						"mac"       "452"
					}

					"FlashTime"  // float
					{
						"windows"   "440"
						"linux"     "456"
						"mac"       "456"
					}

					"nailpos"  // float
					{
						"windows"   "444"
						"linux"     "460"
						"mac"       "460"
					}

					"old_leg_damage"  // float
					{
						"windows"   "448"
						"linux"     "464"
						"mac"       "464"
					}

					"clientHalluc"  // float
					{
						"windows"   "452"
						"linux"     "468"
						"mac"       "468"
					}

					"clientTranq"  // float
					{
						"windows"   "456"
						"linux"     "472"
						"mac"       "472"
					}

					"no_active_nail_grens"  // float
					{
						"windows"   "460"
						"linux"     "476"
						"mac"       "476"
					}

					"no_active_napalm_grens"  // float
					{
						"windows"   "464"
						"linux"     "480"
						"mac"       "480"
					}

					"no_active_gas_grens"  // float
					{
						"windows"   "468"
						"linux"     "484"
						"mac"       "484"
					}

					"numflames"  // float
					{
						"windows"   "472"
						"linux"     "488"
						"mac"       "488"
					}

					"timecount"  // float
					{
						"windows"   "476"
						"linux"     "492"
						"mac"       "492"
					}

					"flame_id"  // char*
					{
						"windows"   "480"
						"linux"     "496"
						"mac"       "496"
					}

					"undercover_team"  // int
					{
						"windows"   "484"
						"linux"     "500"
						"mac"       "500"
					}

					"undercover_skin"  // int
					{
						"windows"   "488"
						"linux"     "504"
						"mac"       "504"
					}

					"undercover_target"  // EHANDLE
					{
						"windows"   "492"
						"linux"     "508"
						"mac"       "508"
					}

					"StatusRefreshTime"  // float
					{
						"windows"   "500"
						"linux"     "516"
						"mac"       "516"
					}

					"StatusBarSize"  // float
					{
						"windows"   "504"
						"linux"     "520"
						"mac"       "520"
					}

					"StatusBarRes"  // float
					{
						"windows"   "508"
						"linux"     "524"
						"mac"       "524"
					}

					"ScannerOn"  // float
					{
						"windows"   "512"
						"linux"     "528"
						"mac"       "528"
					}

					"tf_id"  // int
					{
						"windows"   "516"
						"linux"     "532"
						"mac"       "532"
					}

					"teamkills"  // int
					{
						"windows"   "520"
						"linux"     "536"
						"mac"       "536"
					}

					"is_admin"  // BOOL
					{
						"windows"   "524"
						"linux"     "540"
						"mac"       "540"
					}

					"admin_mode"  // int
					{
						"windows"   "528"
						"linux"     "544"
						"mac"       "544"
					}

					"admin_use"  // EHANDLE
					{
						"windows"   "532"
						"linux"     "548"
						"mac"       "548"
					}

					"ip"  // int
					{
						"windows"   "540"
						"linux"     "556"
						"mac"       "556"
					}

					"goal_no"  // int
					{
						"windows"   "544"
						"linux"     "560"
						"mac"       "560"
					}

					"group_no"  // int
					{
						"windows"   "548"
						"linux"     "564"
						"mac"       "564"
					}

					"goal_state"  // int
					{
						"windows"   "552"
						"linux"     "568"
						"mac"       "568"
					}

					"owned_by"  // int
					{
						"windows"   "556"
						"linux"     "572"
						"mac"       "572"
					}

					"teamcheck"  // string_t
					{
						"windows"   "560"
						"linux"     "576"
						"mac"       "576"
					}

					"owned_by_teamcheck"  // string_t
					{
						"windows"   "564"
						"linux"     "580"
						"mac"       "580"
					}

					"goal_activation"  // int
					{
						"windows"   "568"
						"linux"     "584"
						"mac"       "584"
					}

					"goal_effects"  // int
					{
						"windows"   "572"
						"linux"     "588"
						"mac"       "588"
					}

					"goal_result"  // int
					{
						"windows"   "576"
						"linux"     "592"
						"mac"       "592"
					}

					"goal_group"  // int
					{
						"windows"   "580"
						"linux"     "596"
						"mac"       "596"
					}

					"else_goal"  // int
					{
						"windows"   "584"
						"linux"     "600"
						"mac"       "600"
					}

					"if_goal_is_active"  // int
					{
						"windows"   "588"
						"linux"     "604"
						"mac"       "604"
					}

					"if_goal_is_inactive"  // int
					{
						"windows"   "592"
						"linux"     "608"
						"mac"       "608"
					}

					"if_goal_is_removed"  // int
					{
						"windows"   "596"
						"linux"     "612"
						"mac"       "612"
					}

					"if_group_is_active"  // int
					{
						"windows"   "600"
						"linux"     "616"
						"mac"       "616"
					}

					"if_group_is_inactive"  // int
					{
						"windows"   "604"
						"linux"     "620"
						"mac"       "620"
					}

					"if_group_is_removed"  // int
					{
						"windows"   "608"
						"linux"     "624"
						"mac"       "624"
					}

					"search_time"  // float
					{
						"windows"   "612"
						"linux"     "628"
						"mac"       "628"
					}

					"t_length"  // float
					{
						"windows"   "616"
						"linux"     "632"
						"mac"       "632"
					}

					"activate_goal_no"  // int
					{
						"windows"   "620"
						"linux"     "636"
						"mac"       "636"
					}

					"inactivate_goal_no"  // int
					{
						"windows"   "624"
						"linux"     "640"
						"mac"       "640"
					}

					"remove_goal_no"  // int
					{
						"windows"   "628"
						"linux"     "644"
						"mac"       "644"
					}

					"restore_goal_no"  // int
					{
						"windows"   "632"
						"linux"     "648"
						"mac"       "648"
					}

					"activate_group_no"  // int
					{
						"windows"   "636"
						"linux"     "652"
						"mac"       "652"
					}

					"inactivate_group_no"  // int
					{
						"windows"   "640"
						"linux"     "656"
						"mac"       "656"
					}

					"remove_group_no"  // int
					{
						"windows"   "644"
						"linux"     "660"
						"mac"       "660"
					}

					"restore_group_no"  // int
					{
						"windows"   "648"
						"linux"     "664"
						"mac"       "664"
					}

					"m_bAddBonuses"  // BOOL
					{
						"windows"   "652"
						"linux"     "668"
						"mac"       "668"
					}

					"goal_min"  // Vector
					{
						"windows"   "656"
						"linux"     "672"
						"mac"       "672"
					}

					"goal_max"  // Vector
					{
						"windows"   "668"
						"linux"     "684"
						"mac"       "684"
					}

					"replacement_model"  // string_t
					{
						"windows"   "680"
						"linux"     "696"
						"mac"       "696"
					}

					"replacement_model_body"  // int
					{
						"windows"   "684"
						"linux"     "700"
						"mac"       "700"
					}

					"replacement_model_skin"  // int
					{
						"windows"   "688"
						"linux"     "704"
						"mac"       "704"
					}

					"replacement_model_flags"  // int
					{
						"windows"   "692"
						"linux"     "708"
						"mac"       "708"
					}

					"has_item_from_group"  // int
					{
						"windows"   "696"
						"linux"     "712"
						"mac"       "712"
					}

					"hasnt_item_from_group"  // int
					{
						"windows"   "700"
						"linux"     "716"
						"mac"       "716"
					}

					"remove_item_group"  // int
					{
						"windows"   "704"
						"linux"     "720"
						"mac"       "720"
					}

					"return_item_no"  // int
					{
						"windows"   "708"
						"linux"     "724"
						"mac"       "724"
					}

					"if_item_has_moved"  // int
					{
						"windows"   "712"
						"linux"     "728"
						"mac"       "728"
					}

					"if_item_hasnt_moved"  // int
					{
						"windows"   "716"
						"linux"     "732"
						"mac"       "732"
					}

					"remove_spawnpoint"  // int
					{
						"windows"   "720"
						"linux"     "736"
						"mac"       "736"
					}

					"restore_spawnpoint"  // int
					{
						"windows"   "724"
						"linux"     "740"
						"mac"       "740"
					}

					"remove_spawngroup"  // int
					{
						"windows"   "728"
						"linux"     "744"
						"mac"       "744"
					}

					"restore_spawngroup"  // int
					{
						"windows"   "732"
						"linux"     "748"
						"mac"       "748"
					}

					"display_item_status"  // int[4]
					{
						"windows"   "736"
						"linux"     "752"
						"mac"       "752"
					}

					"team_str_home"  // string_t
					{
						"windows"   "752"
						"linux"     "768"
						"mac"       "768"
					}

					"team_str_moved"  // string_t
					{
						"windows"   "756"
						"linux"     "772"
						"mac"       "772"
					}

					"team_str_carried"  // string_t
					{
						"windows"   "760"
						"linux"     "776"
						"mac"       "776"
					}

					"non_team_str_home"  // string_t
					{
						"windows"   "764"
						"linux"     "780"
						"mac"       "780"
					}

					"non_team_str_moved"  // string_t
					{
						"windows"   "768"
						"linux"     "784"
						"mac"       "784"
					}

					"non_team_str_carried"  // string_t
					{
						"windows"   "772"
						"linux"     "788"
						"mac"       "788"
					}

					"ex_skill_min"  // int
					{
						"windows"   "776"
						"linux"     "792"
						"mac"       "792"
					}

					"ex_skill_max"  // int
					{
						"windows"   "780"
						"linux"     "796"
						"mac"       "796"
					}

					"increase_team"  // int[4]
					{
						"windows"   "784"
						"linux"     "800"
						"mac"       "800"
					}

					"increase_team_owned_by"  // int
					{
						"windows"   "800"
						"linux"     "816"
						"mac"       "816"
					}

					"wait"  // float
					{
						"windows"   "804"
						"linux"     "820"
						"mac"       "820"
					}

					"count"  // int
					{
						"windows"   "808"
						"linux"     "824"
						"mac"       "824"
					}

					"axhitme"  // int
					{
						"windows"   "812"
						"linux"     "828"
						"mac"       "828"
					}

					"drop_time"  // float
					{
						"windows"   "816"
						"linux"     "832"
						"mac"       "832"
					}

					"redrop_origin"  // Vector
					{
						"windows"   "820"
						"linux"     "836"
						"mac"       "836"
					}

					"redrop_count"  // int
					{
						"windows"   "832"
						"linux"     "848"
						"mac"       "848"
					}

					"attack_finished"  // float
					{
						"windows"   "836"
						"linux"     "852"
						"mac"       "852"
					}

					"distance"  // float
					{
						"windows"   "840"
						"linux"     "856"
						"mac"       "856"
					}

					"speed_reduction"  // int
					{
						"windows"   "844"
						"linux"     "860"
						"mac"       "860"
					}

					"m_flEndRoundTime"  // float
					{
						"windows"   "848"
						"linux"     "864"
						"mac"       "864"
					}

					"m_iszEndRoundMsg_Team1_Win"  // string_t
					{
						"windows"   "852"
						"linux"     "868"
						"mac"       "868"
					}

					"m_iszEndRoundMsg_Team2_Win"  // string_t
					{
						"windows"   "856"
						"linux"     "872"
						"mac"       "872"
					}

					"m_iszEndRoundMsg_Team3_Win"  // string_t
					{
						"windows"   "860"
						"linux"     "876"
						"mac"       "876"
					}

					"m_iszEndRoundMsg_Team4_Win"  // string_t
					{
						"windows"   "864"
						"linux"     "880"
						"mac"       "880"
					}

					"m_iszEndRoundMsg_Team1_Lose"  // string_t
					{
						"windows"   "868"
						"linux"     "884"
						"mac"       "884"
					}

					"m_iszEndRoundMsg_Team2_Lose"  // string_t
					{
						"windows"   "872"
						"linux"     "888"
						"mac"       "888"
					}

					"m_iszEndRoundMsg_Team3_Lose"  // string_t
					{
						"windows"   "876"
						"linux"     "892"
						"mac"       "892"
					}

					"m_iszEndRoundMsg_Team4_Lose"  // string_t
					{
						"windows"   "880"
						"linux"     "896"
						"mac"       "896"
					}

					"m_iszEndRoundMsg_Team1"  // string_t
					{
						"windows"   "884"
						"linux"     "900"
						"mac"       "900"
					}

					"m_iszEndRoundMsg_Team2"  // string_t
					{
						"windows"   "888"
						"linux"     "904"
						"mac"       "904"
					}

					"m_iszEndRoundMsg_Team3"  // string_t
					{
						"windows"   "892"
						"linux"     "908"
						"mac"       "908"
					}

					"m_iszEndRoundMsg_Team4"  // string_t
					{
						"windows"   "896"
						"linux"     "912"
						"mac"       "912"
					}

					"m_iszEndRoundMsg_OwnedBy"  // string_t
					{
						"windows"   "900"
						"linux"     "916"
						"mac"       "916"
					}

					"m_iszEndRoundMsg_NonOwnedBy"  // string_t
					{
						"windows"   "904"
						"linux"     "920"
						"mac"       "920"
					}

					"killtarget"  // string_t
					{
						"windows"   "908"
						"linux"     "924"
						"mac"       "924"
					}

					"noise4"  // string_t
					{
						"windows"   "912"
						"linux"     "928"
						"mac"       "928"
					}

					"broadcast"  // string_t
					{
						"windows"   "916"
						"linux"     "932"
						"mac"       "932"
					}

					"team_broadcast"  // string_t
					{
						"windows"   "920"
						"linux"     "936"
						"mac"       "936"
					}

					"non_team_broadcast"  // string_t
					{
						"windows"   "924"
						"linux"     "940"
						"mac"       "940"
					}

					"owners_team_broadcast"  // string_t
					{
						"windows"   "928"
						"linux"     "944"
						"mac"       "944"
					}

					"non_owners_team_broadcast"  // string_t
					{
						"windows"   "932"
						"linux"     "948"
						"mac"       "948"
					}

					"team_drop"  // string_t
					{
						"windows"   "936"
						"linux"     "952"
						"mac"       "952"
					}

					"non_team_drop"  // string_t
					{
						"windows"   "940"
						"linux"     "956"
						"mac"       "956"
					}

					"org_broadcast"  // string_t
					{
						"windows"   "944"
						"linux"     "960"
						"mac"       "960"
					}

					"org_team_broadcast"  // string_t
					{
						"windows"   "948"
						"linux"     "964"
						"mac"       "964"
					}

					"org_non_team_broadcast"  // string_t
					{
						"windows"   "952"
						"linux"     "968"
						"mac"       "968"
					}

					"org_owners_team_broadcast"  // string_t
					{
						"windows"   "956"
						"linux"     "972"
						"mac"       "972"
					}

					"org_non_owners_team_broadcast"  // string_t
					{
						"windows"   "960"
						"linux"     "976"
						"mac"       "976"
					}

					"org_team_drop"  // string_t
					{
						"windows"   "964"
						"linux"     "980"
						"mac"       "980"
					}

					"org_non_team_drop"  // string_t
					{
						"windows"   "968"
						"linux"     "984"
						"mac"       "984"
					}

					"org_message"  // string_t
					{
						"windows"   "972"
						"linux"     "988"
						"mac"       "988"
					}

					"org_noise3"  // string_t
					{
						"windows"   "976"
						"linux"     "992"
						"mac"       "992"
					}

					"org_noise4"  // string_t
					{
						"windows"   "980"
						"linux"     "996"
						"mac"       "996"
					}

					"netname_broadcast"  // string_t
					{
						"windows"   "984"
						"linux"     "1000"
						"mac"       "1000"
					}

					"netname_team_broadcast"  // string_t
					{
						"windows"   "988"
						"linux"     "1004"
						"mac"       "1004"
					}

					"netname_non_team_broadcast"  // string_t
					{
						"windows"   "992"
						"linux"     "1008"
						"mac"       "1008"
					}

					"netname_owners_team_broadcast"  // string_t
					{
						"windows"   "996"
						"linux"     "1012"
						"mac"       "1012"
					}

					"netname_team_drop"  // string_t
					{
						"windows"   "1000"
						"linux"     "1016"
						"mac"       "1016"
					}

					"netname_non_team_drop"  // string_t
					{
						"windows"   "1004"
						"linux"     "1020"
						"mac"       "1020"
					}

					"speak"  // string_t
					{
						"windows"   "1008"
						"linux"     "1024"
						"mac"       "1024"
					}

					"AP_speak"  // string_t
					{
						"windows"   "1012"
						"linux"     "1028"
						"mac"       "1028"
					}

					"team_speak"  // string_t
					{
						"windows"   "1016"
						"linux"     "1032"
						"mac"       "1032"
					}

					"non_team_speak"  // string_t
					{
						"windows"   "1020"
						"linux"     "1036"
						"mac"       "1036"
					}

					"owners_team_speak"  // string_t
					{
						"windows"   "1024"
						"linux"     "1040"
						"mac"       "1040"
					}

					"non_owners_team_speak"  // string_t
					{
						"windows"   "1028"
						"linux"     "1044"
						"mac"       "1044"
					}

					"deathtype"  // string_t
					{
						"windows"   "1032"
						"linux"     "1048"
						"mac"       "1048"
					}

					"all_active"  // int
					{
						"windows"   "1036"
						"linux"     "1052"
						"mac"       "1052"
					}

					"item_list"  // int
					{
						"windows"   "1040"
						"linux"     "1056"
						"mac"       "1056"
					}

					"delay_time"  // float
					{
						"windows"   "1044"
						"linux"     "1060"
						"mac"       "1060"
					}

					"do_triggerwork"  // BOOL
					{
						"windows"   "1048"
						"linux"     "1064"
						"mac"       "1064"
					}

					"rv_s_h"  // float
					{
						"windows"   "1052"
						"linux"     "1068"
						"mac"       "1068"
					}

					"rs_s_h"  // float
					{
						"windows"   "1056"
						"linux"     "1072"
						"mac"       "1072"
					}

					"rv_gr"  // float
					{
						"windows"   "1060"
						"linux"     "1076"
						"mac"       "1076"
					}

					"rs_gr"  // float
					{
						"windows"   "1064"
						"linux"     "1080"
						"mac"       "1080"
					}

					"rv_g"  // float
					{
						"windows"   "1068"
						"linux"     "1084"
						"mac"       "1084"
					}

					"rs_g"  // float
					{
						"windows"   "1072"
						"linux"     "1088"
						"mac"       "1088"
					}

					"has_abbreviated"  // float
					{
						"windows"   "1076"
						"linux"     "1092"
						"mac"       "1092"
					}

					"timer_type"  // int
					{
						"windows"   "1080"
						"linux"     "1096"
						"mac"       "1096"
					}

					"invincible_finished"  // float
					{
						"windows"   "1084"
						"linux"     "1100"
						"mac"       "1100"
					}

					"invisible_finished"  // float
					{
						"windows"   "1088"
						"linux"     "1104"
						"mac"       "1104"
					}

					"super_damage_finished"  // float
					{
						"windows"   "1092"
						"linux"     "1108"
						"mac"       "1108"
					}

					"radsuit_finished"  // float
					{
						"windows"   "1096"
						"linux"     "1112"
						"mac"       "1112"
					}

					"m_bLostInvincSound"  // BOOL
					{
						"windows"   "1100"
						"linux"     "1116"
						"mac"       "1116"
					}

					"m_bLostInvisSound"  // BOOL
					{
						"windows"   "1104"
						"linux"     "1120"
						"mac"       "1120"
					}

					"m_bLostSuperSound"  // BOOL
					{
						"windows"   "1108"
						"linux"     "1124"
						"mac"       "1124"
					}

					"m_bLostRadSound"  // BOOL
					{
						"windows"   "1112"
						"linux"     "1128"
						"mac"       "1128"
					}

					"m_fInvincSound"  // float
					{
						"windows"   "1116"
						"linux"     "1132"
						"mac"       "1132"
					}

					"m_fSuperSound"  // float
					{
						"windows"   "1120"
						"linux"     "1136"
						"mac"       "1136"
					}
				}
			}
		}
	}
}


/**
 * Class Hierarchy
 * -
 * CBaseEntity
 *     CAmbientGeneric
 *     CAreaDef
 *     CBaseDelay
 *         CAutoTrigger
 *         CBaseAnimating
 *             CActAnimating
 *                 CXenHair
 *                 CXenPLight
 *                 CXenSpore
 *                     CXenSporeLarge
 *                     CXenSporeMed
 *                     CXenSporeSmall
 *                 CXenTree
 *             CBasePlayerItem
 *                 CBasePlayerWeapon
 *                     CCrowbar
 *                         CTFAxe
 *                             CTFKnife
 *                             CTFMedikit
 *                             CTFSpanner
 *                     CHandGrenade
 *                     CTFAssaultC
 *                     CTFAutoRifle
 *                     CTFFlamethrower
 *                     CTFGrenadeLauncher
 *                         CTFPipebombLauncher
 *                     CTFIncendiaryC
 *                     CTFNailgun
 *                         CTFSuperNailgun
 *                     CTFRailgun
 *                     CTFRpg
 *                     CTFShotgun
 *                         CTFSuperShotgun
 *                     CTFSniperRifle
 *                     CTFTranq
 *                     CWeaponCycler
 *             CBaseToggle
 *                 CBaseButton
 *                     CRotButton
 *                 CBaseDoor
 *                     CRotDoor
 *                 CBaseMonster
 *                     CBasePlayer
 *                     CBaseTurret
 *                         CMiniTurret
 *                         CSentry
 *                         CTurret
 *                     CCineMonster
 *                         CCineAI
 *                     CCycler
 *                         CCyclerProbe
 *                         CGenericCycler
 *                     CDeadHEV
 *                     CEnvExplosion
 *                     CFurniture
 *                     CGenericMonster
 *                     CGrenade
 *                         CAirtank
 *                         CDetpack
 *                         CMortar
 *                         CTFFlamethrowerBurst
 *                         CTFGrenade
 *                         CTFIncendiaryCRocket
 *                         CTFNailgunNail
 *                         CTFPrimeGrenade
 *                             CTFBomblet
 *                             CTFCaltropGrenade
 *                             CTFConcussionGrenade
 *                             CTFEMPGrenade
 *                             CTFGasGrenade
 *                             CTFMirvGrenade
 *                             CTFNailGrenade
 *                             CTFNapalmGrenade
 *                             CTFNormalGrenade
 *                         CTFRpgRocket
 *                     CGunTarget
 *                     CLegacyCineMonster
 *                         CCine2HeavyWeapons
 *                         CCine2Scientist
 *                         CCine2Slave
 *                         CCine3Barney
 *                         CCine3Scientist
 *                         CCineBarney
 *                         CCinePanther
 *                         CCineScientist
 *                     CSquadMonster
 *                     CTFDispenser
 *                     CTFFlame
 *                     CTFSentrygun
 *                     CTFTeleporter
 *                     CTalkMonster
 *                     CTestHull
 *                     CWreckage
 *                 CBasePlatTrain
 *                     CFuncPlat
 *                         CFuncPlatRot
 *                             CFuncTrackChange
 *                                 CFuncTrackAuto
 *                     CFuncTrain
 *                 CBaseTrigger
 *                     CChangeLevel
 *                     CLadder
 *                     CTriggerCDAudio
 *                     CTriggerCounter
 *                     CTriggerEndSection
 *                     CTriggerGravity
 *                     CTriggerHurt
 *                     CTriggerMonsterJump
 *                     CTriggerMultiple
 *                         CTriggerOnce
 *                     CTriggerPush
 *                     CTriggerSave
 *                     CTriggerTeleport
 *                 CFuncIllusionary
 *                 CFuncMortarField
 *                 CMomentaryDoor
 *                 CMomentaryRotButton
 *                 CMultiManager
 *                 CRecharge
 *                 CScriptedSentence
 *                 CWallHealth
 *             CTFGoal
 *                 CTFGoalItem
 *                 CTFTimerGoal
 *         CBreakable
 *             CPushable
 *         CEnvBeverage
 *         CEnvFunnel
 *         CFireAndDie
 *         CGibShooter
 *             CEnvShooter
 *         CTeamCheck
 *         CTeamSet
 *         CTestEffect
 *         CTriggerCamera
 *         CTriggerChangeTarget
 *         CTriggerRelay
 *     CBasePlayerAmmo
 *         CTFRpgAmmo
 *     CBaseSpectator
 *     CBeam
 *         CLaser
 *         CLightning
 *     CBubbling
 *     CButtonTarget
 *     CCineBlood
 *     CCorpse
 *     CCyclerSprite
 *     CDecal
 *     CDispenserRefillThinker
 *     CEnvSpark
 *     CFrictionModifier
 *     CFuncRotating
 *     CFuncTank
 *         CFuncTankGun
 *         CFuncTankLaser
 *         CFuncTankMortar
 *         CFuncTankRocket
 *     CFuncTankControls
 *     CFuncTrackTrain
 *     CFuncTrainControls
 *     CFuncWall
 *         CFuncConveyor
 *         CFuncMonsterClip
 *         CFuncWallToggle
 *     CGhost
 *     CGib
 *     CItem
 *         CHealthKit
 *         CItemAmmo
 *             CItemAmmoCells
 *             CItemAmmoNails
 *             CItemAmmoRockets
 *             CItemAmmoShells
 *         CItemAntidote
 *         CItemArmor
 *             CItemArmorGreen
 *             CItemArmorRed
 *             CItemArmorYellow
 *         CItemBattery
 *         CItemHealth
 *         CItemLongJump
 *         CItemPowerup
 *             CItemPowerupInvincible
 *             CItemPowerupInvisibility
 *             CItemPowerupQuad
 *             CItemPowerupRadsuit
 *         CItemSecurity
 *         CItemSuit
 *     CItemSoda
 *     CLaserSpot
 *     CNoBuildArea
 *     CNoGrenadeArea
 *     CNodeEnt
 *     CNodeViewer
 *     CNullEntity
 *     CPendulum
 *     CPlatTrigger
 *     CPointEntity
 *         CBlood
 *         CEnvGlobal
 *         CEnvSound
 *         CFade
 *         CGlow
 *         CInfoIntermission
 *         CLight
 *             CEnvLight
 *         CMessage
 *         CMultiSource
 *         CPathCorner
 *         CPathTrack
 *         CRevertSaved
 *         CShake
 *         CSprite
 *         CStripWeapons
 *         CTargetCDAudio
 *         CTriggerVolume
 *         CXenHull
 *     CRenderFxManager
 *     CShower
 *     CSoundEnt
 *     CSpeaker
 *     CSprayCan
 *     CTFCaltrop
 *     CTFDetect
 *     CTFSentrygunBase
 *     CTFSpawn
 *     CTelefragDeath
 *     CTimer
 *     CWeaponBox
 *     CWorld
 *     CWorldItem
 *     CXenTreeTrigger
 */
